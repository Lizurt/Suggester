// Generated from java-escape by ANTLR 4.11.1

    package the.grammar;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class TheLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		HELLO=1, WORLD=2, STRANGER=3, AND=4, MY_NAME_IS=5, ITS=6, VERY=7, COOL=8, 
		IDENTIFIER=9, IDENTIFIER_START=10, IDENTIFIER_PART=11, WS=12;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"HELLO", "WORLD", "STRANGER", "AND", "MY_NAME_IS", "ITS", "VERY", "COOL", 
			"IDENTIFIER", "IDENTIFIER_START", "IDENTIFIER_PART", "WS", "A", "B", 
			"C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", 
			"Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "CH_UNDERSCORE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "HELLO", "WORLD", "STRANGER", "AND", "MY_NAME_IS", "ITS", "VERY", 
			"COOL", "IDENTIFIER", "IDENTIFIER_START", "IDENTIFIER_PART", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TheLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TheLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\f\u00c8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0005\b\u0084\b\b\n\b\f\b\u0087"+
		"\t\b\u0001\t\u0001\t\u0001\n\u0001\n\u0003\n\u008d\b\n\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001"+
		" \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001"+
		"%\u0001&\u0001&\u0000\u0000\'\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\u0000\u001b\u0000\u001d\u0000\u001f\u0000!\u0000#\u0000"+
		"%\u0000\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u00005\u00007\u0000"+
		"9\u0000;\u0000=\u0000?\u0000A\u0000C\u0000E\u0000G\u0000I\u0000K\u0000"+
		"M\u0000\u0001\u0000\u001d\u0001\u0000AZ\u0001\u0000az\u0003\u0000\t\n"+
		"\r\r  \u0002\u0000AAaa\u0002\u0000BBbb\u0002\u0000CCcc\u0002\u0000DDd"+
		"d\u0002\u0000EEee\u0002\u0000FFff\u0002\u0000GGgg\u0002\u0000HHhh\u0002"+
		"\u0000IIii\u0002\u0000JJjj\u0002\u0000KKkk\u0002\u0000LLll\u0002\u0000"+
		"MMmm\u0002\u0000NNnn\u0002\u0000OOoo\u0002\u0000PPpp\u0002\u0000QQqq\u0002"+
		"\u0000RRrr\u0002\u0000SSss\u0002\u0000TTtt\u0002\u0000UUuu\u0002\u0000"+
		"VVvv\u0002\u0000WWww\u0002\u0000XXxx\u0002\u0000YYyy\u0002\u0000ZZzz\u00ae"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0001O\u0001"+
		"\u0000\u0000\u0000\u0003U\u0001\u0000\u0000\u0000\u0005[\u0001\u0000\u0000"+
		"\u0000\u0007d\u0001\u0000\u0000\u0000\th\u0001\u0000\u0000\u0000\u000b"+
		"s\u0001\u0000\u0000\u0000\rw\u0001\u0000\u0000\u0000\u000f|\u0001\u0000"+
		"\u0000\u0000\u0011\u0081\u0001\u0000\u0000\u0000\u0013\u0088\u0001\u0000"+
		"\u0000\u0000\u0015\u008c\u0001\u0000\u0000\u0000\u0017\u008e\u0001\u0000"+
		"\u0000\u0000\u0019\u0092\u0001\u0000\u0000\u0000\u001b\u0094\u0001\u0000"+
		"\u0000\u0000\u001d\u0096\u0001\u0000\u0000\u0000\u001f\u0098\u0001\u0000"+
		"\u0000\u0000!\u009a\u0001\u0000\u0000\u0000#\u009c\u0001\u0000\u0000\u0000"+
		"%\u009e\u0001\u0000\u0000\u0000\'\u00a0\u0001\u0000\u0000\u0000)\u00a2"+
		"\u0001\u0000\u0000\u0000+\u00a4\u0001\u0000\u0000\u0000-\u00a6\u0001\u0000"+
		"\u0000\u0000/\u00a8\u0001\u0000\u0000\u00001\u00aa\u0001\u0000\u0000\u0000"+
		"3\u00ac\u0001\u0000\u0000\u00005\u00ae\u0001\u0000\u0000\u00007\u00b0"+
		"\u0001\u0000\u0000\u00009\u00b2\u0001\u0000\u0000\u0000;\u00b4\u0001\u0000"+
		"\u0000\u0000=\u00b6\u0001\u0000\u0000\u0000?\u00b8\u0001\u0000\u0000\u0000"+
		"A\u00ba\u0001\u0000\u0000\u0000C\u00bc\u0001\u0000\u0000\u0000E\u00be"+
		"\u0001\u0000\u0000\u0000G\u00c0\u0001\u0000\u0000\u0000I\u00c2\u0001\u0000"+
		"\u0000\u0000K\u00c4\u0001\u0000\u0000\u0000M\u00c6\u0001\u0000\u0000\u0000"+
		"OP\u0003\'\u0013\u0000PQ\u0003!\u0010\u0000QR\u0003/\u0017\u0000RS\u0003"+
		"/\u0017\u0000ST\u00035\u001a\u0000T\u0002\u0001\u0000\u0000\u0000UV\u0003"+
		"E\"\u0000VW\u00035\u001a\u0000WX\u0003;\u001d\u0000XY\u0003/\u0017\u0000"+
		"YZ\u0003\u001f\u000f\u0000Z\u0004\u0001\u0000\u0000\u0000[\\\u0003=\u001e"+
		"\u0000\\]\u0003?\u001f\u0000]^\u0003;\u001d\u0000^_\u0003\u0019\f\u0000"+
		"_`\u00033\u0019\u0000`a\u0003%\u0012\u0000ab\u0003!\u0010\u0000bc\u0003"+
		";\u001d\u0000c\u0006\u0001\u0000\u0000\u0000de\u0003\u0019\f\u0000ef\u0003"+
		"3\u0019\u0000fg\u0003\u001f\u000f\u0000g\b\u0001\u0000\u0000\u0000hi\u0003"+
		"1\u0018\u0000ij\u0003I$\u0000jk\u0003M&\u0000kl\u00033\u0019\u0000lm\u0003"+
		"\u0019\f\u0000mn\u00031\u0018\u0000no\u0003!\u0010\u0000op\u0003M&\u0000"+
		"pq\u0003)\u0014\u0000qr\u0003=\u001e\u0000r\n\u0001\u0000\u0000\u0000"+
		"st\u0003)\u0014\u0000tu\u0003?\u001f\u0000uv\u0003=\u001e\u0000v\f\u0001"+
		"\u0000\u0000\u0000wx\u0003C!\u0000xy\u0003!\u0010\u0000yz\u0003;\u001d"+
		"\u0000z{\u0003I$\u0000{\u000e\u0001\u0000\u0000\u0000|}\u0003\u001d\u000e"+
		"\u0000}~\u00035\u001a\u0000~\u007f\u00035\u001a\u0000\u007f\u0080\u0003"+
		"/\u0017\u0000\u0080\u0010\u0001\u0000\u0000\u0000\u0081\u0085\u0003\u0013"+
		"\t\u0000\u0082\u0084\u0003\u0015\n\u0000\u0083\u0082\u0001\u0000\u0000"+
		"\u0000\u0084\u0087\u0001\u0000\u0000\u0000\u0085\u0083\u0001\u0000\u0000"+
		"\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0012\u0001\u0000\u0000"+
		"\u0000\u0087\u0085\u0001\u0000\u0000\u0000\u0088\u0089\u0007\u0000\u0000"+
		"\u0000\u0089\u0014\u0001\u0000\u0000\u0000\u008a\u008d\u0003\u0013\t\u0000"+
		"\u008b\u008d\u0007\u0001\u0000\u0000\u008c\u008a\u0001\u0000\u0000\u0000"+
		"\u008c\u008b\u0001\u0000\u0000\u0000\u008d\u0016\u0001\u0000\u0000\u0000"+
		"\u008e\u008f\u0007\u0002\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0006\u000b\u0000\u0000\u0091\u0018\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0007\u0003\u0000\u0000\u0093\u001a\u0001\u0000\u0000\u0000"+
		"\u0094\u0095\u0007\u0004\u0000\u0000\u0095\u001c\u0001\u0000\u0000\u0000"+
		"\u0096\u0097\u0007\u0005\u0000\u0000\u0097\u001e\u0001\u0000\u0000\u0000"+
		"\u0098\u0099\u0007\u0006\u0000\u0000\u0099 \u0001\u0000\u0000\u0000\u009a"+
		"\u009b\u0007\u0007\u0000\u0000\u009b\"\u0001\u0000\u0000\u0000\u009c\u009d"+
		"\u0007\b\u0000\u0000\u009d$\u0001\u0000\u0000\u0000\u009e\u009f\u0007"+
		"\t\u0000\u0000\u009f&\u0001\u0000\u0000\u0000\u00a0\u00a1\u0007\n\u0000"+
		"\u0000\u00a1(\u0001\u0000\u0000\u0000\u00a2\u00a3\u0007\u000b\u0000\u0000"+
		"\u00a3*\u0001\u0000\u0000\u0000\u00a4\u00a5\u0007\f\u0000\u0000\u00a5"+
		",\u0001\u0000\u0000\u0000\u00a6\u00a7\u0007\r\u0000\u0000\u00a7.\u0001"+
		"\u0000\u0000\u0000\u00a8\u00a9\u0007\u000e\u0000\u0000\u00a90\u0001\u0000"+
		"\u0000\u0000\u00aa\u00ab\u0007\u000f\u0000\u0000\u00ab2\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0007\u0010\u0000\u0000\u00ad4\u0001\u0000\u0000\u0000"+
		"\u00ae\u00af\u0007\u0011\u0000\u0000\u00af6\u0001\u0000\u0000\u0000\u00b0"+
		"\u00b1\u0007\u0012\u0000\u0000\u00b18\u0001\u0000\u0000\u0000\u00b2\u00b3"+
		"\u0007\u0013\u0000\u0000\u00b3:\u0001\u0000\u0000\u0000\u00b4\u00b5\u0007"+
		"\u0014\u0000\u0000\u00b5<\u0001\u0000\u0000\u0000\u00b6\u00b7\u0007\u0015"+
		"\u0000\u0000\u00b7>\u0001\u0000\u0000\u0000\u00b8\u00b9\u0007\u0016\u0000"+
		"\u0000\u00b9@\u0001\u0000\u0000\u0000\u00ba\u00bb\u0007\u0017\u0000\u0000"+
		"\u00bbB\u0001\u0000\u0000\u0000\u00bc\u00bd\u0007\u0018\u0000\u0000\u00bd"+
		"D\u0001\u0000\u0000\u0000\u00be\u00bf\u0007\u0019\u0000\u0000\u00bfF\u0001"+
		"\u0000\u0000\u0000\u00c0\u00c1\u0007\u001a\u0000\u0000\u00c1H\u0001\u0000"+
		"\u0000\u0000\u00c2\u00c3\u0007\u001b\u0000\u0000\u00c3J\u0001\u0000\u0000"+
		"\u0000\u00c4\u00c5\u0007\u001c\u0000\u0000\u00c5L\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c7\u0005_\u0000\u0000\u00c7N\u0001\u0000\u0000\u0000\u0003\u0000"+
		"\u0085\u008c\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}